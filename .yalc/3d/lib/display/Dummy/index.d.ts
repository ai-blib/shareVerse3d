import IDummy, { StrideMode } from "../../interface/IDummy";
import AnimationManager from "../core/AnimatedObjectManager/AnimationManager";
import Model from "../Model";
import { Animation } from "../../interface/IAnimatedObjectManager";
export default class Dummy extends Model implements IDummy {
    static componentName: string;
    static defaults: Partial<import("../../interface/utils/Defaults").default<IDummy>>;
    static schema: Required<import("../../interface/utils/extractProps").ExtractProps<IDummy>>;
    private poseService;
    constructor();
    private poseAnimationState;
    private animationState;
    get animation(): Animation | undefined;
    set animation(val: Animation | undefined);
    private spineNameState;
    get spineName(): string | undefined;
    set spineName(val: string | undefined);
    get resize(): boolean;
    set resize(val: boolean);
    private srcState;
    get src(): string;
    set src(val: string);
    private animationsState;
    get animations(): Record<string, AnimationManager>;
    set animations(val: Record<string, string | AnimationManager>);
    private presetState;
    get preset(): "default" | "rifle";
    set preset(val: "default" | "rifle");
    private strideForwardState;
    get strideForward(): number;
    set strideForward(val: number);
    private strideRightState;
    get strideRight(): number;
    set strideRight(val: number);
    private strideMoveState;
    get strideMove(): boolean;
    set strideMove(val: boolean);
    private strideModeState;
    get strideMode(): StrideMode;
    set strideMode(val: StrideMode);
    private jumpHeight;
    jump(height?: number): void;
}
