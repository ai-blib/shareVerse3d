import IAreaLight from "../../interface/IAreaLight";
import ObjectManager from "../core/ObjectManager";
import { ShadowResolution } from "../../states/useShadowResolution";
import Nullable from "../../interface/utils/Nullable";
export default class AreaLight extends ObjectManager implements IAreaLight {
    static componentName: string;
    static defaults: Partial<import("../../interface/utils/Defaults").default<IAreaLight>>;
    static schema: Required<import("../../interface/utils/extractProps").ExtractProps<IAreaLight>>;
    private light?;
    constructor();
    shadowResolution: Nullable<ShadowResolution>;
    private helperState;
    get helper(): boolean;
    set helper(val: boolean);
    private _color?;
    get color(): string;
    set color(val: string);
    private _intensity?;
    get intensity(): number;
    set intensity(val: number);
    private _width?;
    get width(): number;
    set width(val: number);
    private _height?;
    get height(): number;
    set height(val: number);
    private _scaleX?;
    get scaleX(): number;
    set scaleX(val: number);
    private _scaleY?;
    get scaleY(): number;
    set scaleY(val: number);
    get depth(): number;
    set depth(_: number);
    get scaleZ(): number;
    set scaleZ(_: number);
    private _castShadow?;
    get castShadow(): boolean;
    set castShadow(val: boolean);
}
